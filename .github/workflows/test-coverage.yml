# Test Coverage Workflow
# 
# Runs comprehensive test suite and generates coverage reports
# for quality gates and continuous integration

name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run type checking
      run: npm run type-check

    - name: Run unit tests with coverage
      run: npm run test:coverage
      env:
        CI: true

    - name: Run integration tests
      run: npm run test:integration
      env:
        CI: true

    - name: Check coverage thresholds
      run: npm run test:coverage:check

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

    - name: Generate coverage report
      run: npm run test:coverage:report

    - name: Archive coverage artifacts
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: |
          coverage/
          test-results/

    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        recreate: true
        path: coverage/coverage-summary.txt

  quality-gates:
    runs-on: ubuntu-latest
    needs: test-coverage
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run quality checks
      run: |
        npm run test:coverage
        npm run lint
        npm run type-check

    - name: Validate coverage thresholds
      run: |
        # Check if coverage meets minimum requirements
        npm run test:coverage:validate

    - name: Security audit
      run: npm audit --audit-level moderate

    - name: Bundle size check
      run: |
        npm run build
        npm run bundle-analyzer -- --analyze

  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run performance tests
      run: npm run test:performance
      env:
        CI: true

    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance-results/